--- a/loudmouth/lm-parser.c
+++ b/loudmouth/lm-parser.c
@@ -239,6 +239,46 @@
 	return parser;
 }

+gchar *
+_g_utf8_make_valid (const gchar *name)
+{ 
+  GString *string;
+  const gchar *remainder, *invalid;
+  gint remaining_bytes, valid_bytes;
+
+  g_return_val_if_fail (name != NULL, NULL);
+
+  string = NULL;
+  remainder = name;
+  remaining_bytes = strlen (name);
+
+  while (remaining_bytes != 0)
+    {
+      if (g_utf8_validate (remainder, remaining_bytes, &invalid))
+        break;
+      valid_bytes = invalid - remainder;
+
+      if (string == NULL)
+        string = g_string_sized_new (remaining_bytes);
+
+      g_string_append_len (string, remainder, valid_bytes);
+      /* append U+FFFD REPLACEMENT CHARACTER */
+      g_string_append (string, "\357\277\275");
+
+      remaining_bytes -= valid_bytes + 1;
+      remainder = invalid + 1;
+    }
+
+  if (string == NULL)
+    return g_strdup (name);
+
+  g_string_append (string, remainder);
+
+  g_assert (g_utf8_validate (string->str, -1, NULL));
+
+  return g_string_free (string, FALSE);
+}
+
 void
 lm_parser_parse (LmParser *parser, const gchar *string)
 {
@@ -249,12 +289,13 @@
                                                               parser, NULL);
         }
         
-        if (g_markup_parse_context_parse (parser->context, string, 
-                                          (gssize)strlen (string), NULL)) {
-        } else {
+        gchar* valid_string = _g_utf8_make_valid(string);
+        if (!g_markup_parse_context_parse (parser->context, valid_string,
+                                          (gssize)strlen (valid_string), NULL)) {
 		g_markup_parse_context_free (parser->context);
 		parser->context = NULL;
         }
+        g_free(valid_string);
 }
 
 void
