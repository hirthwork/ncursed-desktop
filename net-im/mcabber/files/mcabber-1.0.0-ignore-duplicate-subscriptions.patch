--- a/mcabber/xmpp.c
+++ b/mcabber/xmpp.c
@@ -1539,6 +1539,7 @@
   char *r;
   char *buf;
   int newbuddy;
+  guint subscription;
   guint hook_result;
   LmMessageSubType mstype = lm_message_get_sub_type(m);
   const char *from = lm_message_get_from(m);
@@ -1557,16 +1558,15 @@
   r = jidtodisp(from);

   newbuddy = !roster_find(r, jidsearch, 0);
+  subscription = roster_getsubscription(r);

   hook_result = hk_subscription(mstype, r, msg);

   if (mstype == LM_MESSAGE_SUB_TYPE_SUBSCRIBE) {
     /* The sender wishes to subscribe to our presence */

-    if (hook_result) {
-      g_free(r);
-      return LM_HANDLER_RESULT_REMOVE_MESSAGE;
-    }
+    if (hook_result || (subscription & sub_from))
+      goto handle_s10n_return;

     buf = g_strdup_printf("<%s> wants to subscribe to your presence updates",
                           from);
@@ -1602,6 +1602,8 @@
   } else if (mstype == LM_MESSAGE_SUB_TYPE_UNSUBSCRIBE) {
     /* The sender is unsubscribing from our presence */
     xmpp_send_s10n(from, LM_MESSAGE_SUB_TYPE_UNSUBSCRIBED);
+    if (!(subscription & sub_from))
+      goto handle_s10n_return;
     buf = g_strdup_printf("<%s> is unsubscribing from your "
                           "presence updates", from);
     scr_WriteIncomingMessage(r, buf, 0, HBB_PREFIX_INFO, 0);
@@ -1609,6 +1611,8 @@
     g_free(buf);
   } else if (mstype == LM_MESSAGE_SUB_TYPE_SUBSCRIBED) {
     /* The sender has allowed us to receive their presence */
+    if (subscription & sub_to)
+      goto handle_s10n_return;
     buf = g_strdup_printf("<%s> has allowed you to receive their "
                           "presence updates", from);
     scr_WriteIncomingMessage(r, buf, 0, HBB_PREFIX_INFO, 0);
@@ -1619,6 +1623,8 @@
        subscription has been cancelled */
     roster_unsubscribed(from);
     update_roster = TRUE;
+    if (!(subscription & sub_to))
+      goto handle_s10n_return;
     buf = g_strdup_printf("<%s> has cancelled your subscription to "
                           "their presence updates", from);
     scr_WriteIncomingMessage(r, buf, 0, HBB_PREFIX_INFO, 0);
@@ -1631,6 +1637,8 @@

   if (newbuddy)
     update_roster = TRUE;
+
+handle_s10n_return:
   g_free(r);
   return LM_HANDLER_RESULT_REMOVE_MESSAGE;
 }
